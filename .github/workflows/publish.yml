name: Publish QPM Package

on:
  push:
    tags:
      - "v*"

env:
  module_id: beatsaber-hook

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          submodules: true
          lfs: true

      - uses: seanmiddleditch/gha-setup-ninja@v3

      # Use canary NDK to avoid lesser known compile bugs
      - name: Setup canary NDK
        id: setup-ndk
        uses: ./.github/actions/canary-ndk

      - name: Create ndkpath.txt
        run: |
          echo ${{ steps.setup-ndk.outputs.ndk-path }} > ${GITHUB_WORKSPACE}/ndkpath.txt
          cat ${GITHUB_WORKSPACE}/ndkpath.txt

      - name: Extract version
        id: version
        run: |
          echo "TAG=${GITHUB_REF#refs/tags/}" >> ${GITHUB_OUTPUT}
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> ${GITHUB_OUTPUT}

      - name: QPM Rust Action
        uses: Fernthedev/qpm-rust-action@main
        with:
          #required
          workflow_token: ${{secrets.GITHUB_TOKEN}}

          restore: true # will run restore on download
          cache: true #will cache dependencies

          publish: true
          publish_token: ${{secrets.PUBLISH_KEY}}

          version: ${{ steps.version.outputs.VERSION }}
          tag: ${{ steps.version.outputs.TAG }}

          # set to true if applicable, ASSUMES the file is already a release asset
          qpm_release_bin: true
          qpm_debug_bin: true

      - name: Build
        run: |
          cd ${GITHUB_WORKSPACE}
          qpm-rust s build

      - name: Get Library Name
        id: libname
        run: |
          cd ./build/
          pattern="lib${module_id}*.so"
          files=( $pattern )
          echo ::set-output name=NAME::"${files[0]}"

      - name: Upload to Release
        id: upload_file_release
        uses: softprops/action-gh-release@v0.1.15
        with:
          tag_name: ${{ steps.version.outputs.TAG }}
          files: |
            ./build/${{ steps.libname.outputs.NAME }}
            ./build/debug/${{ steps.libname.outputs.NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
